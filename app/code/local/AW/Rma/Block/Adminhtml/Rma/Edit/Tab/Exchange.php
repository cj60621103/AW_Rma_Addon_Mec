<?phpclass AW_Rma_Block_Adminhtml_Rma_Edit_Tab_Exchange extends Mage_Adminhtml_Block_Abstract {		private $_rmaRequest = null;    private $_order = null;			public function __construct() {        if (!$this->getTemplate())            $this->setTemplate('aw_rma/exchange_goods.phtml');    }		public function getRmaRequest() {        if (!$this->_rmaRequest)            $this->_rmaRequest = Mage::registry('awrmaformdatarma');        return $this->_rmaRequest;    }		public function getOrder() {        if (!$this->_order)            $this->_order = Mage::getModel('sales/order')->loadByIncrementId($this->getRmaRequest()->getOrderId());        return $this->_order;    }				public function getItemsCollection()	{		$items_array = array();		$rma = $this->getRmaRequest();		$order = $this->getOrder();				$rma_items_array = $rma->getOrderItems();		foreach($rma_items_array as $item_id => $qty){			foreach($order->getAllItems() as $_item){				if($_item->getQuoteItemId() == $item_id){					$items_array[$_item->getProductId()] = array(						'quote_item_id' => $item_id,						'replace' => $qty					);				}			}		}		// Mage::log($items_array);		return $items_array;		}		public function getReplaceOrder()	{		$rma_id = $this->getRmaRequest()->getId();		$order =  Mage::getModel('sales/order')->getCollection()				->addFieldToFilter('rma_id', array('eq' => $rma_id))				->getFirstItem();						return $order;	}		public function alreadyReplace()	{		$rma_id = $this->getRmaRequest()->getId();		$flag = false;		$size = Mage::getModel('sales/order')->getCollection()				->addFieldToFilter('rma_id', array('eq' => $rma_id))				->getSize();				if($size == 0)		{			$flag = true;		}				return $flag;	}	}